<?php

/**
 * BaseUtoconsultUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $username
 * @property string $password
 * @property string $email
 * @property enum $type
 * @property integer $level
 * @property boolean $isAdmin
 * @property boolean $active
 * @property UtoconsultUserInformation $UtoconsultUserInformation
 * @property UtoconsultUserProfilePhoto $UtoconsultUserProfilePhoto
 * @property UtoconsultUserContact $UtoconsultUserContact
 * @property Doctrine_Collection $UtoconsultMyArticle
 * @property Doctrine_Collection $UtoconsultPhoto
 * @property Doctrine_Collection $UtoconsultFile
 * 
 * @method string                     getUsername()                   Returns the current record's "username" value
 * @method string                     getPassword()                   Returns the current record's "password" value
 * @method string                     getEmail()                      Returns the current record's "email" value
 * @method enum                       getType()                       Returns the current record's "type" value
 * @method integer                    getLevel()                      Returns the current record's "level" value
 * @method boolean                    getIsAdmin()                    Returns the current record's "isAdmin" value
 * @method boolean                    getActive()                     Returns the current record's "active" value
 * @method UtoconsultUserInformation  getUtoconsultUserInformation()  Returns the current record's "UtoconsultUserInformation" value
 * @method UtoconsultUserProfilePhoto getUtoconsultUserProfilePhoto() Returns the current record's "UtoconsultUserProfilePhoto" value
 * @method UtoconsultUserContact      getUtoconsultUserContact()      Returns the current record's "UtoconsultUserContact" value
 * @method Doctrine_Collection        getUtoconsultMyArticle()        Returns the current record's "UtoconsultMyArticle" collection
 * @method Doctrine_Collection        getUtoconsultPhoto()            Returns the current record's "UtoconsultPhoto" collection
 * @method Doctrine_Collection        getUtoconsultFile()             Returns the current record's "UtoconsultFile" collection
 * @method UtoconsultUser             setUsername()                   Sets the current record's "username" value
 * @method UtoconsultUser             setPassword()                   Sets the current record's "password" value
 * @method UtoconsultUser             setEmail()                      Sets the current record's "email" value
 * @method UtoconsultUser             setType()                       Sets the current record's "type" value
 * @method UtoconsultUser             setLevel()                      Sets the current record's "level" value
 * @method UtoconsultUser             setIsAdmin()                    Sets the current record's "isAdmin" value
 * @method UtoconsultUser             setActive()                     Sets the current record's "active" value
 * @method UtoconsultUser             setUtoconsultUserInformation()  Sets the current record's "UtoconsultUserInformation" value
 * @method UtoconsultUser             setUtoconsultUserProfilePhoto() Sets the current record's "UtoconsultUserProfilePhoto" value
 * @method UtoconsultUser             setUtoconsultUserContact()      Sets the current record's "UtoconsultUserContact" value
 * @method UtoconsultUser             setUtoconsultMyArticle()        Sets the current record's "UtoconsultMyArticle" collection
 * @method UtoconsultUser             setUtoconsultPhoto()            Sets the current record's "UtoconsultPhoto" collection
 * @method UtoconsultUser             setUtoconsultFile()             Sets the current record's "UtoconsultFile" collection
 * 
 * @package    uto
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUtoconsultUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('utoconsult_user');
        $this->hasColumn('username', 'string', 30, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'user',
              1 => 'company',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('level', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('isAdmin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UtoconsultUserInformation', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('UtoconsultUserProfilePhoto', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('UtoconsultUserContact', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UtoconsultMyArticle', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UtoconsultPhoto', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UtoconsultFile', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'username',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}