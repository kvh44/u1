<?php

/**
 * BaseUtoconsultMyArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category1_id
 * @property integer $category2_id
 * @property string $keywords
 * @property string $description
 * @property string $title
 * @property blob $content
 * @property string $pdf
 * @property string $keywords_en
 * @property string $description_en
 * @property string $title_en
 * @property blob $content_en
 * @property string $pdf_en
 * @property integer $user_id
 * @property integer $visitnumber
 * @property boolean $comment
 * @property enum $level
 * @property boolean $isdeleted
 * @property boolean $isvalid
 * @property UtoconsultArticleCategory1 $UtoconsultArticleCategory1
 * @property UtoconsultArticleCategory2 $UtoconsultArticleCategory2
 * @property UtoconsultUser $UtoconsultUser
 * 
 * @method integer                    getCategory1Id()                Returns the current record's "category1_id" value
 * @method integer                    getCategory2Id()                Returns the current record's "category2_id" value
 * @method string                     getKeywords()                   Returns the current record's "keywords" value
 * @method string                     getDescription()                Returns the current record's "description" value
 * @method string                     getTitle()                      Returns the current record's "title" value
 * @method blob                       getContent()                    Returns the current record's "content" value
 * @method string                     getPdf()                        Returns the current record's "pdf" value
 * @method string                     getKeywordsEn()                 Returns the current record's "keywords_en" value
 * @method string                     getDescriptionEn()              Returns the current record's "description_en" value
 * @method string                     getTitleEn()                    Returns the current record's "title_en" value
 * @method blob                       getContentEn()                  Returns the current record's "content_en" value
 * @method string                     getPdfEn()                      Returns the current record's "pdf_en" value
 * @method integer                    getUserId()                     Returns the current record's "user_id" value
 * @method integer                    getVisitnumber()                Returns the current record's "visitnumber" value
 * @method boolean                    getComment()                    Returns the current record's "comment" value
 * @method enum                       getLevel()                      Returns the current record's "level" value
 * @method boolean                    getIsdeleted()                  Returns the current record's "isdeleted" value
 * @method boolean                    getIsvalid()                    Returns the current record's "isvalid" value
 * @method UtoconsultArticleCategory1 getUtoconsultArticleCategory1() Returns the current record's "UtoconsultArticleCategory1" value
 * @method UtoconsultArticleCategory2 getUtoconsultArticleCategory2() Returns the current record's "UtoconsultArticleCategory2" value
 * @method UtoconsultUser             getUtoconsultUser()             Returns the current record's "UtoconsultUser" value
 * @method UtoconsultMyArticle        setCategory1Id()                Sets the current record's "category1_id" value
 * @method UtoconsultMyArticle        setCategory2Id()                Sets the current record's "category2_id" value
 * @method UtoconsultMyArticle        setKeywords()                   Sets the current record's "keywords" value
 * @method UtoconsultMyArticle        setDescription()                Sets the current record's "description" value
 * @method UtoconsultMyArticle        setTitle()                      Sets the current record's "title" value
 * @method UtoconsultMyArticle        setContent()                    Sets the current record's "content" value
 * @method UtoconsultMyArticle        setPdf()                        Sets the current record's "pdf" value
 * @method UtoconsultMyArticle        setKeywordsEn()                 Sets the current record's "keywords_en" value
 * @method UtoconsultMyArticle        setDescriptionEn()              Sets the current record's "description_en" value
 * @method UtoconsultMyArticle        setTitleEn()                    Sets the current record's "title_en" value
 * @method UtoconsultMyArticle        setContentEn()                  Sets the current record's "content_en" value
 * @method UtoconsultMyArticle        setPdfEn()                      Sets the current record's "pdf_en" value
 * @method UtoconsultMyArticle        setUserId()                     Sets the current record's "user_id" value
 * @method UtoconsultMyArticle        setVisitnumber()                Sets the current record's "visitnumber" value
 * @method UtoconsultMyArticle        setComment()                    Sets the current record's "comment" value
 * @method UtoconsultMyArticle        setLevel()                      Sets the current record's "level" value
 * @method UtoconsultMyArticle        setIsdeleted()                  Sets the current record's "isdeleted" value
 * @method UtoconsultMyArticle        setIsvalid()                    Sets the current record's "isvalid" value
 * @method UtoconsultMyArticle        setUtoconsultArticleCategory1() Sets the current record's "UtoconsultArticleCategory1" value
 * @method UtoconsultMyArticle        setUtoconsultArticleCategory2() Sets the current record's "UtoconsultArticleCategory2" value
 * @method UtoconsultMyArticle        setUtoconsultUser()             Sets the current record's "UtoconsultUser" value
 * 
 * @package    uto
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUtoconsultMyArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('utoconsult_my_article');
        $this->hasColumn('category1_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => false,
             ));
        $this->hasColumn('category2_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => false,
             ));
        $this->hasColumn('keywords', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'blob', null, array(
             'type' => 'blob',
             'notnull' => true,
             ));
        $this->hasColumn('pdf', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('keywords_en', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description_en', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('title_en', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('content_en', 'blob', null, array(
             'type' => 'blob',
             ));
        $this->hasColumn('pdf_en', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('visitnumber', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('comment', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('level', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => '1',
              1 => '2',
              2 => '3',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('isdeleted', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('isvalid', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));


        $this->index('articleindex', array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UtoconsultArticleCategory1', array(
             'local' => 'category1_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UtoconsultArticleCategory2', array(
             'local' => 'category2_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UtoconsultUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'created_at',
              1 => 'title',
             ),
             ));
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'keywords',
              1 => 'title',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
        $this->actAs($searchable0);
    }
}